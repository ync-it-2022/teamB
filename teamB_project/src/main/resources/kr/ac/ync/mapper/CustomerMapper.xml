<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.ync.mapper.CustomerMapper">

	<resultMap type="kr.ac.ync.domain.CustomerVO" id="customerMap">
		<id property="userid" column="USERID"/>
		<result property="userid" column="USERID"/>
		<result property="userpw" column="USERPW"/>
		<result property="username" column="USERNAME"/>
		<result property="tel_number" column="TEL_NUMBER"/>
		<result property="score" column="SCORE"/>
		<result property="user_created_at" column="USER_CREATED_AT"/>
		<result property="user_picture" column="USER_PICTURE"/>
		<result property="introduction" column="INTRODUCTION"/>
		<result property="enable" column="ENABLED"/>
		<collection property="authList" resultMap="authMap">
		</collection>
	</resultMap>
	
	<resultMap type="kr.ac.ync.domain.AuthVO" id="authMap">
		<result property="userid" column="USERID"/>
		<result property="auth" column="auth"/>
	</resultMap>

	<!--
	member_auth table은 사용 하지 않고 AuthVO만 사용한다.
	tbl_member 의 autho 컬럼 정보만 따로 담는 객체이다.
	Spring Security의 기본 사용법과 다르게 tbl_member에 권한 컴럼(auth)을
	넣어서 사용하기에 기본 사용법과 달라진다.
	-->
	<select id="read" resultMap="customerMap">
	SELECT	USERID,
			USERPW,
			USERNAME,
			TEL_NUMBER,
			SCORE,
			USER_CREATED_AT,
			USER_PICTURE,
			INTRODUCTION,
			ENABLED,
			auth
	FROM	MEMBER
	WHERE	userid = #{userid}
	</select>
	
	<select id="read_pw" resultType="String">
	SELECT	USERPW
	FROM	MEMBER
	WHERE	userid = #{userid}
	</select>
	
	
	<select id ="login" resultMap="customerMap">
		SELECT USERID,
			USERPW,
			USERNAME,
			TEL_NUMBER,
			SCORE,
			USER_CREATED_AT,
			USER_PICTURE,
			INTRODUCTION,
			ENABLED,
			auth 
		FROM MEMBER 
		WHERE userid = #{userid} 
		AND userpw = #{userpw}
	</select>
	
	<insert id="register">
		INSERT INTO Member (    USERID,
								USERPW,
								USERNAME,
								TEL_NUMBER
							   )
		VALUES (
				#{userid},
				#{userpw},
				#{username},
				#{tel_number}
				)
	</insert>
	
	<delete id="delete">
		DELETE Member WHERE USERID = #{userid}
	</delete>
	
	<update id="modify">
		update	MEMBER
		set		USERNAME=#{username},
				TEL_NUMBER = #{tel_number},
				USER_PICTURE = #{user_picture},
				INTRODUCTION = #{introduction}
		where 	userid = #{userid}
	</update>
	
	<update id="pw_modify">
		update	MEMBER
		set		USERPW= #{userpw}
		where 	userid = #{userid}
	</update>

</mapper>
